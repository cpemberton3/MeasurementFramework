# Moving most of the needed installs here
# not needed on all nodes.

# Only being ran on an CentOs host.

- name: Installing packages in elk/tasks/main.yml
  become: true
  tags: packages
  ansible.builtin.package:
    name:
      - gcc
      - bzip2-devel
      - libffi-devel
      - httpd-tools
      - lvm2
      - device-mapper-persistent-data
      - epel-release
      - openssl-devel
      - centos-release-scl
      - yum-utils
    state: present

- name: Configure docker-ce repo
  tags: docker
  get_url:
    url: https://download.docker.com/linux/centos/docker-ce.repo
    dest: /etc/yum.repos.d/docer-ce.repo
    mode: 0644

- name: Install docker
  tags: docker
  ansible.builtin.package:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    state: present

- name: Create docker group
  tags: docker
  group:
    name: "docker"
    state: present

- name: Adding user ansible to docker group
  tags: docker
  user:
    name: ansible
    groups: "docker"
    append: "yes"

- name: Start and enable docker service
  tags: docker
  service:
    name: docker
    state: started
    enabled: yes

# - name: Check docker hello-world
#   tags: docker, docker-test
#   shell: docker run hello-world

- name: Check if Docker Compose is installed
  tags: docker-compose
  command: docker-compose --version
  register: docker_compose_check
  ignore_errors: yes

- name: Setting vm.max_map_count
  tags: docker
  shell: sysctl -w vm.max_map_count=262144

- name: Download and install Docker Compose
  tags: docker-compose
  get_url:
    url: https://github.com/docker/compose/releases/download/{{ docker_compose_ver }}/docker-compose-Linux-x86_64
    dest: /usr/bin/docker-compose
    mode: 0755

# ==============================================================

  # Moved the above from base to here.

# ==============================================================

## Check if git repo already exists (if so, skip clone git repo)
- name: Check if file already exists
  tags: elksetup
  stat:
    path: ~/mf_git/elk/docker-images/elk/docker-compose.yml
  register: r_git_code_exist

- name: Clone fabric git repo
  tags: elksetup
  git:
    repo: https://github.com/fabric-testbed/MeasurementFramework.git
    dest: ~/mf_git
    version: dev
  when: r_git_code_exist.stat.exists == false

## Check if elk folders are already created
- name: Check if elk folders already exists
  tags: elksetup
  stat:
    path: ~/mf_git/elk/docker-images/elk/logstash
  register: r_elk_folder_exist

# Create random password for Nginx
- name: Generate random password for Nginx
  become: true
  set_fact:
    nginx_htaccess_password: "{{ lookup('password', 'credentials/nginx_passwd')}}"

- name: Setting Folders for ELK Stack
  tags: elksetup
  shell: ~/mf_git/elk/docker-images/elk/setfolders.sh
  when: r_elk_folder_exist.stat.exists == false

- name: Setting login info for nginx
  tags: nginxsetup
  shell: htpasswd -b -c ~/mf_git/elk/docker-images/elk/nginx/etc/.htpasswd.user {{ nginx_htaccess_username }} {{ nginx_htaccess_password }}

- name: Update nginx configuration
  tags: nginxsetup
  template:
    src: "{{ nginx_template_file }}"
    dest: ~/mf_git/elk/docker-images/elk/nginx/etc/nginx.conf

- name: Start ELK dockers
  tags: elkstart
  become: true
  shell: docker-compose up -d es01 es02 es03
  args:
    chdir: /home/ansible/mf_git/elk/docker-images/elk/

- name: Start logstash docker
  tags: logstashstart
  become: true
  shell: docker-compose up -d logstash
  args:
    chdir: /home/ansible/mf_git/elk/docker-images/elk/

- name: Start kibana docker
  tags: kibanastart
  become: true
  shell: docker-compose up -d kibana
  args:
    chdir: /home/ansible/mf_git/elk/docker-images/elk/

- name: Start nginx docker
  tags: nginxstart
  become: true
  shell: docker-compose up -d nginx
  args:
    chdir: /home/ansible/mf_git/elk/docker-images/elk/

# Print out generated Nginx password
- name: Print out generated Nginx password
  debug:
    msg: "{{ nginx_htaccess_password }}"
